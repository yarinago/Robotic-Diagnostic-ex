apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    name: mlflow-deployment
  # instance: {{ .Release.Name }}
    managed-by: helm
spec:
  replicas: 2   # At least two replicas in case one will crash
  selector:
    matchLabels:
      name: mlflow-deployment
    # instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: mlflow-deployment
      # instance: {{ .Release.Name }}
    spec:
      containers:
        - name: larribas-mlflow
          image: larribas/mlflow:1.9.1 # If we use a private registry then we need to use ImagePullSecrets
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
          - name: BACKEND_STORE_URI
            value: "{{ .Values.db.type }}://{{ .Values.db.user }}:{{ .Values.db.password }}@{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.database }}"
          - name: DEFAULT_ARTIFACT_ROOT
            value: {{ .Values.default_artifact_root }}
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 0 # Start to check immediately (We can change according to the up-time of the app) 
            periodSeconds: 2 # Check the app every 3 seconds (We can change to whatever we want)
            timeoutSeconds: 10 # After X seconds the readiness probe time out (We can change accordingly)
            failureThreshold: 5 # After X times the pod marked as unready (We can change accordingly)
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10 # Start to check after 3 seconds (We can change according to the up-time of the app) 
            periodSeconds: 3 # Check the app every 3 seconds (We can change to whatever we want)
            timeoutSeconds: 10 # After X seconds the liveness probe time out (We can change accordingly)
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          # Limits the amount of resources the app can use (We choose them)
           #limits: 
           #  cpu: 1
           #  memory: 1Gi
           volumeMounts:
             - mountPath: "/export"
               name: mlflow-volume
     #nodeSelector: # Specify on which nodes the pod can exist
     #  label:
     #    name: mlflow
     #  zone: eu-central-1-ham-1a
     volumes:
      - name: mlflow-volume
        hostpath:
          path: /mlflow-data
