apiVersion: v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    name: {{ include "mlflow.fullname" . }}-deployment
  # instance: {{ .Release.Name }}
    managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }} # At least two replicas in case one will crash
  selector:
    matchLabels:
      name: mlflow-deployment
    # instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: mlflow-deployment
      # instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}" # If we use a private registry then we need to use ImagePullSecrets
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.image.containerPort }}
          env:
          - name: BACKEND_STORE_URI
            value: "{{ .Values.db.type }}://{{ .Values.db.user }}:{{ .Values.db.password }}@{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.database }}"
          - name: DEFAULT_ARTIFACT_ROOT
            value: {{ .Values.default_artifact_root }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }} # Start to check immediately (We can change according to the up-time of the app) 
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }} # Check the app every X seconds (We can change to whatever we want)
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }} # After X seconds the readiness probe time out (We can change accordingly)
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }} # After X times the pod marked as unready (We can change accordingly)
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port:  {{ .Values.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 7 }}
          volumeMounts:
{{ toYaml .Values.volumeMounts | indent 7 }}
{{- end }}
{{- if .Values.volumes }}
{{- with .Values.nodeSelector }}
      nodeSelector: # Specify on which nodes the pod can exist
        {{- toYaml . | nindent 5 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 5 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 5 }}
    {{- end }}
      volumes:
{{ toYaml .Values.volumes | indent 5 }}
{{- end }}
